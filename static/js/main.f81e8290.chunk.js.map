{"version":3,"sources":["components/AppHeader/AppHeader.js","components/AppSearch/AppSearch.js","components/Movies/Movies.js","components/AppFooter/AppFooter.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["AppHeader","param","react_default","a","createElement","className","title","AppSearch","type","placeholder","onChange","event","search","target","value","Movies","stars","bannerSrc","poster","overviewTxt","desc","length","substring","trim","hyperlink","id","rating","Math","floor","src","alt","name","releaseDate","href","AppFooter","pageStatus","pageCount","paginationGrp","display","totalPage","currentPage","resultCount","style","onClick","onPagePrev","onPageNext","App","state","movies","searchQuery","foundMovies","totalResults","totalPages","searchMovieDB","key","page","_this","setState","searchURL","$","ajax","url","success","data","results","moviesFetched","forEach","movie","push","total_results","total_pages","error","nextPageHandler","pageCurrent","prevPageHandler","moviesInDOM","this","map","index","components_Movies_Movies","overview","poster_path","release_date","vote_average","rel","components_AppHeader_AppHeader","components_AppSearch_AppSearch","components_AppFooter_AppFooter","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f81e8290.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = (param) => {\r\n    return (\r\n        <div className=\"App-Header\">{param.title}</div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './AppSearch.css';\r\n\r\nconst AppSearch = (param) => {\r\n    \r\n    const onChangeSearch = (event) => {\r\n        param.search(event.target.value, 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App-Search\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Enter a movie name to search...\"\r\n                onChange={onChangeSearch} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppSearch;","import React from 'react';\r\nimport './Movies.css';\r\n\r\n//Library imports\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst Movies = (param) => {\r\n\r\n    const bannerSrc = \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + param.poster;\r\n    const overviewTxt = param.desc.length > 200 ? param.desc.substring(0, 200).trim() + \"...\" : param.desc;\r\n    const hyperlink = \"https://www.themoviedb.org/movie/\" + param.id;\r\n\r\n    let stars;\r\n    if (param.rating > 0) {\r\n        switch (Math.floor(param.rating)) {\r\n            case 1:\r\n            case 2: stars = <span>\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                            </span>\r\n                    break;\r\n            case 3:\r\n            case 4: stars = <span>\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                            </span>\r\n                    break;\r\n            case 5:\r\n            case 6: stars = <span>\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                            </span>\r\n                    break;\r\n            case 7:\r\n            case 8: stars = <span>\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                            </span>\r\n                    break;\r\n            case 9:\r\n            case 10: stars = <span>\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                                <span className=\"fa fa-star Rating-Checked\" />\r\n                            </span>\r\n                    break;\r\n            default:    stars = <span>No ratings</span>                        \r\n                break;\r\n        }\r\n    } else {\r\n        stars = <span>No ratings</span> \r\n    }\r\n\r\n    return (\r\n        <div className=\"Movie-Container\">\r\n            <div className=\"Movie-Item\">\r\n                <div className=\"Banner\">\r\n                    <img src={bannerSrc} alt=\"Not found!\" />\r\n                </div>\r\n                <div className=\"Details\">\r\n                    <div className=\"Details-Container\">\r\n                        <div className=\"Name\">{param.name}</div>\r\n                        <table className=\"Tabular\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"Details-Header\">Release date</td>\r\n                                    <td className=\"Details-Value\">{param.releaseDate}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"Details-Header\">Rating</td>\r\n                                    <td className=\"Details-Value\">{stars}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"Overview\">{overviewTxt}</div>\r\n                    </div>\r\n                    <div className=\"Link-Container\">\r\n                        <a href={hyperlink}>Read more</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\nimport './AppFooter.css';\r\n\r\nconst AppFooter = (param) => {\r\n\r\n    let pageStatus = \" \";\r\n    let pageCount = \"\";\r\n    let paginationGrp = {\r\n        display: 'none'\r\n    };\r\n    if (param.totalPage > 0) {\r\n        pageStatus = param.currentPage + \" / \" + param.totalPage;\r\n        pageCount = param.resultCount + \" results\";\r\n        paginationGrp = {\r\n            display: 'block'\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"App-Footer\">\r\n            <div className=\"Results-Counter\">{pageCount}</div>\r\n            <div className=\"Pagination-Group\" style={paginationGrp}>\r\n                <span onClick={param.onPagePrev}>❮ Prev </span>\r\n                <span onClick={param.onPageNext}> Next ❯</span>\r\n            </div>\r\n            <div className=\"Page-Number\">{pageStatus}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppFooter;","import React, { Component } from 'react';\nimport './App.css';\n\n// Component imports\nimport AppHeader from '../../components/AppHeader/AppHeader';\nimport AppSearch from '../../components/AppSearch/AppSearch';\nimport Movies from '../../components/Movies/Movies';\nimport AppFooter from '../../components/AppFooter/AppFooter';\n\n//Library imports\nimport $ from 'jquery';\n\nclass App extends Component {\n  // Statefull component\n  state = {\n    movies: [],\n    searchQuery: null,\n    foundMovies: false,\n    totalResults: 0,\n    currentPage: 1,\n    totalPages: 0\n\n  }\n\n  searchMovieDB = (key, page) => {\n    if (key.length === 0) {\n      this.setState({\n        foundMovies: false,\n        totalResults: 0,\n        currentPage: 1,\n        totalPages: 0\n      })\n    } else {\n      const searchURL = \"https://api.themoviedb.org/3/search/movie?api_key=7751227fa3f05ae8dc774a8ccccc3071&language=en-US&query=\" + key + \"&page=\" + page;\n\n      $.ajax({\n        url: searchURL,\n        success: (data) => {\n          if (data.results.length > 0) {\n            let moviesFetched = [];\n\n            data.results.forEach((movie) => {\n              moviesFetched.push(movie);\n            });\n\n            this.setState({\n              movies: moviesFetched,\n              searchQuery: key,\n              foundMovies: true,\n              totalResults: data.total_results,\n              currentPage: data.page,\n              totalPages: data.total_pages\n            });\n\n          } else {\n            this.setState({\n              foundMovies: false,\n              totalResults: 0,\n              currentPage: 1,\n              totalPages: 0\n            })\n          }\n        },\n        error: (error) => {\n          this.setState({\n            foundMovies: false,\n            totalResults: 0,\n            currentPage: 1,\n            totalPages: 0\n          })\n        }\n      });\n\n    }\n  }\n\n\n  //Page change handler\n  nextPageHandler = () => {\n    let pageCurrent = this.state.currentPage;\n    let pageTotal = this.state.totalPages;\n\n    if (pageCurrent < pageTotal) {\n      this.searchMovieDB(this.state.searchQuery, ++pageCurrent);\n    }\n  }\n\n  prevPageHandler = () => {\n    let pageCurrent = this.state.currentPage;\n\n    if (pageCurrent > 1) {\n      this.searchMovieDB(this.state.searchQuery, --pageCurrent);\n    }\n  }\n\n\n  render() {\n\n    //Rendering moviews in DOM\n    let moviesInDOM = null;\n    if (this.state.foundMovies) {\n      moviesInDOM = this.state.movies.map((movie, index) => {\n        return <Movies\n          key={index}\n          id={movie.id}\n          name={movie.title}\n          desc={movie.overview}\n          poster={movie.poster_path}\n          releaseDate={movie.release_date}\n          rating={movie.vote_average} />\n      });\n    } else {\n      moviesInDOM = <div className=\"No-Result-Found\">No movies to display...</div>\n    }\n\n    return (\n      <div className=\"App\">\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n        <AppHeader title=\"The Movie DB\" />\n        <AppSearch\n          search={this.searchMovieDB} />\n        <div className=\"Area-Row\">\n          {moviesInDOM}\n        </div>\n        <AppFooter\n          resultCount={this.state.totalResults}\n          currentPage={this.state.currentPage}\n          totalPage={this.state.totalPages}\n          onPageNext={this.nextPageHandler}\n          onPagePrev={this.prevPageHandler} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}